# this whole program aims to get a mathematical result of 10 by taking the sum of 6 and 24, then dividing it by 3
# but it also tests every instruction the ZVM can handle in the process

MOV    reg0    $24    # move the imm. int 24 into reg. 0
INS    reg0    reg1    # store the num. in reg. 0 inside of RAM, sending the ptr. address to reg. 1
MOV    reg0    $6    # reuse reg. 0 to store the imm. int 6
INS    reg0    reg2    # store the num. in reg. 0 inside of RAM, sending the ptr. address to reg. 2

MOV    reg0    *reg1    # move the num. in RAM with the address ptr. stored in reg1 into reg. 0
DEL    *reg1    # free up RAM by removing the value who's address ptr. is stored in reg. 1
MOV    reg1    *reg2    # reuse reg. 1 to store the value in RAM who's address ptr. is stored in reg. 2
DEL    *reg2    # free up RAM

OUT    reg0    # print the value stored in reg. 0
OUT    reg1

EXT    $0    # exit cleanly with code 0